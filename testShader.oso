OpenShadingLanguage 1.00
# Compiled by oslc 1.7.4.pixar38bde12
# options: 
shader testShader
param	color	Cin	0 0 0		%read{6,6} %write{2147483647,-1}
param	float	pos	0.5		%read{0,0} %write{2147483647,-1}
param	float	width	0.2		%read{3,4} %write{2147483647,-1}
oparam	color	Cout	0 0 0		%read{2147483647,-1} %write{6,6}
oparam	float	inStripe	0		%read{6,6} %write{5,5}
global	float	u	%read{2,2} %write{2147483647,-1}
global	float	v	%read{0,2} %write{2147483647,-1}
local	float	dist	%read{5,5} %write{1,1}
local	float	fuzz	%read{3,4} %write{2,2}
temp	float	$tmp1	%read{1,1} %write{0,0}
temp	float	$tmp2	%read{5,5} %write{3,3}
temp	float	$tmp3	%read{5,5} %write{4,4}
code ___main___
# testShader.osl:3
# 	float dist=abs(v-pos);
	sub		$tmp1 v pos 	%filename{"testShader.osl"} %line{3} %argrw{"wrr"}
	abs		dist $tmp1 	%argrw{"wr"}
# testShader.osl:4
# 	float fuzz=u-v;
	sub		fuzz u v 	%line{4} %argrw{"wrr"}
# testShader.osl:6
# 	inStripe=smoothstep(width-fuzz,width+fuzz,dist);
	sub		$tmp2 width fuzz 	%line{6} %argrw{"wrr"}
	add		$tmp3 width fuzz 	%argrw{"wrr"}
	smoothstep	inStripe $tmp2 $tmp3 dist 	%argrw{"wrrr"}
# testShader.osl:7
# 	Cout=inStripe*Cin;
	mul		Cout inStripe Cin 	%line{7} %argrw{"wrr"}
	end
