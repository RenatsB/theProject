OpenShadingLanguage 1.00
# Compiled by oslc 1.7.4.pixar38bde12
# options: 
shader scratchSh
param	float	Cina	0.2		%read{0,0} %write{2147483647,-1}
param	float	Cinb	1		%read{1,1} %write{2147483647,-1}
param	float	scale	1		%read{4,4} %write{2147483647,-1}
param	float	freq	2		%read{5,9} %write{2147483647,-1}
param	float	variation	0.1		%read{7,12} %write{2147483647,-1}
oparam	float	Cout	1		%read{2147483647,-1} %write{29,29}
global	point	P	%read{3,3} %write{2147483647,-1}
local	float	lightm	%read{29,29} %write{0,0}
local	float	darkm	%read{29,29} %write{1,1}
local	point	PP	%read{5,19} %write{4,14}
local	float	l	%read{23,23} %write{22,22}
temp	point	$tmp1	%read{4,4} %write{3,3}
const	string	$const1	"shader"		%read{3,3} %write{2147483647,-1}
const	string	$const2	"transform"		%read{2,2} %write{2147483647,-1}
const	string	$const3	"common"		%read{3,3} %write{2147483647,-1}
temp	vector	$tmp2	%read{7,7} %write{6,6}
const	string	$const4	"perlin"		%read{6,11} %write{2147483647,-1}
temp	point	$tmp3	%read{6,6} %write{5,5}
temp	vector	$tmp4	%read{8,8} %write{7,7}
temp	vector	$tmp5	%read{12,12} %write{11,11}
temp	point	$tmp6	%read{10,10} %write{9,9}
const	float	$const5	2.0999999		%read{10,13} %write{2147483647,-1}
temp	point	$tmp7	%read{11,11} %write{10,10}
temp	vector	$tmp8	%read{13,13} %write{12,12}
temp	vector	$tmp9	%read{14,14} %write{13,13}
const	int	$const6	0		%read{15,16} %write{2147483647,-1}
temp	float	$tmp10	%read{17,17} %write{15,15}
temp	float	$tmp11	%read{17,17} %write{16,16}
temp	float	$tmp12	%read{21,21} %write{17,17}
const	int	$const7	1		%read{18,19} %write{2147483647,-1}
temp	float	$tmp13	%read{20,20} %write{18,18}
temp	float	$tmp14	%read{20,20} %write{19,19}
temp	float	$tmp15	%read{21,21} %write{20,20}
temp	float	$tmp16	%read{22,22} %write{21,21}
temp	float	$tmp17	%read{29,29} %write{28,28}
temp	float	$tmp18	%read{25,28} %write{23,23}
const	float	$const9	8		%read{23,23} %write{2147483647,-1}
const	float	$const10	1		%read{25,27} %write{2147483647,-1}
const	string	$const11	"mod"		%read{24,24} %write{2147483647,-1}
temp	float	$tmp19	%read{27,27} %write{26,26}
temp	float	$tmp20	%read{26,26} %write{25,25}
temp	float	$tmp21	%read{28,28} %write{27,27}
code ___main___
# C:\\Users\\rbikm\\Desktop\\theProject-master\\testShader.osl:11
#     float darkm=Cinb;
	assign		lightm Cina 	%filename{"C:\\Users\\rbikm\\Desktop\\theProject-master\\testShader.osl"} %line{11} %argrw{"wr"}
# C:\\Users\\rbikm\\Desktop\\theProject-master\\testShader.osl:12
#     point PP;
	assign		darkm Cinb 	%line{12} %argrw{"wr"}
# C:\\Users\\rbikm\\Desktop\\theProject-master\\testShader.osl:17
#     PP=PP+(vector)noise("perlin",PP*freq)*variation;
	functioncall	$const2 4 	%line{17} %argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-21.5\\lib\\osl\\include\\stdosl.h:243
# 
	transform	$tmp1 $const3 $const1 P 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-21.5\\lib\\osl\\include\\stdosl.h"} %line{243} %argrw{"wrrr"}
# C:\\Users\\rbikm\\Desktop\\theProject-master\\testShader.osl:17
#     PP=PP+(vector)noise("perlin",PP*freq)*variation;
	mul		PP $tmp1 scale 	%filename{"C:\\Users\\rbikm\\Desktop\\theProject-master\\testShader.osl"} %line{17} %argrw{"wrr"}
# C:\\Users\\rbikm\\Desktop\\theProject-master\\testShader.osl:18
#     PP=PP+(vector)noise("perlin",PP*freq*2.1)*variation/2.1;
	mul		$tmp3 PP freq 	%line{18} %argrw{"wrr"}
	noise		$tmp2 $const4 $tmp3 	%argrw{"wrr"}
	mul		$tmp4 $tmp2 variation 	%argrw{"wrr"}
	add		PP PP $tmp4 	%argrw{"wrr"}
# C:\\Users\\rbikm\\Desktop\\theProject-master\\testShader.osl:19
#     l=sqrt(PP[0]*PP[0]+PP[1]*PP[1]);
	mul		$tmp6 PP freq 	%line{19} %argrw{"wrr"}
	mul		$tmp7 $tmp6 $const5 	%argrw{"wrr"}
	noise		$tmp5 $const4 $tmp7 	%argrw{"wrr"}
	mul		$tmp8 $tmp5 variation 	%argrw{"wrr"}
	div		$tmp9 $tmp8 $const5 	%argrw{"wrr"}
	add		PP PP $tmp9 	%argrw{"wrr"}
# C:\\Users\\rbikm\\Desktop\\theProject-master\\testShader.osl:20
#     Cout=mix(darkm,lightm,mod(l*8,1));
	compref		$tmp10 PP $const6 	%line{20} %argrw{"wrr"}
	compref		$tmp11 PP $const6 	%argrw{"wrr"}
	mul		$tmp12 $tmp10 $tmp11 	%argrw{"wrr"}
	compref		$tmp13 PP $const7 	%argrw{"wrr"}
	compref		$tmp14 PP $const7 	%argrw{"wrr"}
	mul		$tmp15 $tmp13 $tmp14 	%argrw{"wrr"}
	add		$tmp16 $tmp12 $tmp15 	%argrw{"wrr"}
	sqrt		l $tmp16 	%argrw{"wr"}
# C:\\Users\\rbikm\\Desktop\\theProject-master\\testShader.osl:21
# }
	mul		$tmp18 l $const9 	%line{21} %argrw{"wrr"}
	functioncall	$const11 29 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-21.5\\lib\\osl\\include\\stdosl.h:135
# float hypot (float a, float b, float c) { return sqrt (a*a + b*b + c*c); }
	div		$tmp20 $tmp18 $const10 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-21.5\\lib\\osl\\include\\stdosl.h"} %line{135} %argrw{"wrr"}
	floor		$tmp19 $tmp20 	%argrw{"wr"}
	mul		$tmp21 $const10 $tmp19 	%argrw{"wrr"}
	sub		$tmp17 $tmp18 $tmp21 	%argrw{"wrr"}
# C:\\Users\\rbikm\\Desktop\\theProject-master\\testShader.osl:21
# }
	mix		Cout darkm lightm $tmp17 	%filename{"C:\\Users\\rbikm\\Desktop\\theProject-master\\testShader.osl"} %line{21} %argrw{"wrrr"}
	end
